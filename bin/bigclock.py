!#/usr/bin/python3



import board
import busio
import adafruit_character_lcd.character_lcd_i2c as character_lcd
i2c = busio.I2C(board.SCL, board.SDA)
lcd = character_lcd.Character_LCD_I2C(i2c, 20, 4)
lcd.backlight = True
#lcd.message = "Hello there welcom\nCircuitPython\nwho knows if \nthis is too bright"
customchars=[
    bytes([0x01, 0x07, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F]),      # char 1: bottom right triangle
    bytes([0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x1F, 0x1F]),      # char 2: bottom block
    bytes([0x10, 0x1C, 0x1E, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F]),      # char 3: bottom left triangle
    bytes([0x1F, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00]),      # char 4: top right triangle
    bytes([0x1F, 0x1E, 0x1C, 0x10, 0x00, 0x00, 0x00, 0x00]),      # char 5: top left triangle
    bytes([0x1F, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00]),      # char 6: upper block
    bytes([0x1F, 0x1F, 0x1E, 0x1C, 0x18, 0x18, 0x10, 0x10]),      # char 7: full top right triangle
    bytes([0x01, 0x07, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00])       # char 8: top right triangle
];
for ch in range(0,7):
    lcd.create_char(ch, customchars[ch])

mess=""
for ch in range(0,7):
    mess+=chr(ch)

lcd.message=mess

bn4 = [                            # 4-line numbers
#         0               1               2               3               4              5               6                7               8               9
  [0x01,0x06,0x03, 0x08,0xFF,0xFE, 0x08,0x06,0x03, 0x08,0x06,0x03, 0xFF,0xFE,0xFF, 0xFF,0x06,0x06, 0x01,0x06,0x03, 0x06,0x06,0xFF, 0x01,0x06,0x03, 0x01,0x06,0x03],
  [0xFF,0xFE,0xFF, 0xFE,0xFF,0xFE, 0x02,0x02,0xFF, 0xFE,0x02,0xFF, 0xFF,0x02,0xFF, 0xFF,0x02,0x02, 0xFF,0x02,0x02, 0xFE,0x01,0x07, 0xFF,0x02,0xFF, 0xFF,0x02,0xFF],
  [0xFF,0xFE,0xFF, 0xFE,0xFF,0xFE, 0xFF,0xFE,0xFE, 0xFE,0xFE,0xFF, 0xFE,0xFE,0xFF, 0xFE,0xFE,0xFF, 0xFF,0xFE,0xFF, 0xFE,0xFF,0xFE, 0xFF,0xFE,0xFF, 0xFE,0xFE,0xFF],
  [0x04,0x06,0x05, 0xFE,0x06,0xFE, 0x06,0x06,0x06, 0x04,0x06,0x05, 0xFE,0xFE,0x06, 0x04,0x06,0x05, 0x04,0x06,0x05, 0xFE,0x06,0xFE, 0x04,0x06,0x05, 0x04,0x06,0x05]
]

def printNum4(digit, leftAdjust):
   for row in range(0,3):
    lcd.cursor_position(leftAdjust,row);
    i = digit*3
    lcd.message=chr(bn4[row][i])+chr(bn4[row][i+1])+chr(bn4[row][i+2])
